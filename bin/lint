#!/bin/sh

usage="Run Go linter tools"

# Setup
#######
set -euC
root="$(cd "$(dirname "$0")/.." && pwd)"
. "$root/bin/start"

# Run action
############

tmpfile="$(mktemp)"

ignore_grep() {
	local IFS="$(printf '\n\b')"
	for d in $lint_ignore; do printf "|$d"; done
}

ignore_metalinter() {
	local IFS="$(printf '\n\b')"
	for d in $lint_ignore; do printf " -s $d"; done
}

paths=$(go list ./... | grep -Ev "/(vendor$(ignore_grep))" | sed -e "s#^$pkgname#.#")

cleanup() {
	rm -f "$tmpfile"
}
trap cleanup EXIT

# Run gofmt first
for f in $paths; do
	gofmt -s -d "$f"/*.go
done >> "$tmpfile"

if [ -s "$tmpfile" ]; then
	echo
	echo "*****************************************************"
	echo "***                                               ***"
	echo "*** gofmt found the following issues:             ***"
	echo "***                                               ***"
	echo "*****************************************************"
	echo
	cat "$tmpfile"
	exit 1
fi

# Skip the linter if we're on master or beta
if [ -n "$TRAVIS" ]; then
	branch=${TRAVIS_PULL_REQUEST_BRANCH:-${TRAVIS_BRANCH:-}}
	branch=${branch:-$(git rev-parse --abbrev-ref HEAD)}
	branch=${branch:-unknown}
	case "$branch" in
		master|beta|eu|unknown)
			echo "We're on $branch; skipping lint tests"
			exit 0
		;;
	esac
fi

if [ -n "$TRAVIS" ]; then
	# Set up git for Travis here
	git fetch -q origin master:refs/remotes/origin/master
fi

# Get the metalinter
metalinter() {
	go get \
		gopkg.in/alecthomas/gometalinter.v1 \
		github.com/golang/lint/golint \
		github.com/gordonklaus/ineffassign \
		github.com/kisielk/errcheck \
		github.com/walle/lll/...
	which gometalinter || which gometalinter.v1
}

$(metalinter) --deadline=120s --vendor --tests --disable-all \
	$(ignore_metalinter) \
	--enable=vet \
	--enable=golint \
	--enable=ineffassign \
	--enable=errcheck \
	--enable=lll --line-length=120 \
	./...
