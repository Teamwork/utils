#!/bin/sh

usage="Run Go linter tools"

# Setup
#######
set -euC
root="$(cd "$(dirname "$0")/.." && pwd)"
. "$root/bin/start"

# Run action
############

tmpfile="$(mktemp)"

ignore_grep() {
	local IFS="$(printf '\n\b')"
	for d in $lint_ignore; do printf "|$d"; done
}

ignore_metalinter() {
	local IFS="$(printf '\n\b')"
	for d in $lint_ignore; do printf " -s $d"; done
}

paths=$(go list ./... | grep -Ev "/(vendor$(ignore_grep))" | sed -e "s#^$pkgname#.#")

cleanup() {
	rm -f "$tmpfile"
}
trap cleanup EXIT

# Skip the linter if we're on master or beta
if [ -n "$TRAVIS" ]; then
	branch=${TRAVIS_PULL_REQUEST_BRANCH:-${TRAVIS_BRANCH:-}}
	branch=${branch:-$(git rev-parse --abbrev-ref HEAD)}
	branch=${branch:-unknown}
	case "$branch" in
		master|beta|eu|unknown)
			echo "We're on $branch; skipping lint tests"
			exit 0
		;;
	esac
fi

# Ensure generated files are up to date; only run on Travis to prevent
# clobbering people's working directories.
if [ -n "$TRAVIS" ]; then
	go generate $(go list ./... | grep -v /vendor/)
	changes="$(git diff)"
	if [ -n "$changes" ]; then
		echo
		echo "*****************************************************"
		echo "***                                               ***"
		echo "*** Changes in generated files:                   ***"
		echo "***                                               ***"
		echo "*****************************************************"
		echo
		echo "$changes"
	fi
fi

if [ -n "$TRAVIS" ]; then
	# Set up git for Travis here
	git fetch -q origin master:refs/remotes/origin/master

	# Install for Travis.
	go get -u github.com/alecthomas/gometalinter
	gometalinter --install > /dev/null
fi

gometalinter --deadline=120s --vendor --sort=path --tests --disable-all \
	$(ignore_metalinter) \
	--enable=vet \
	--enable=golint \
	--enable=varcheck \
	--enable=structcheck \
	--enable=errcheck \
	--enable=megacheck \
	--enable=ineffassign \
	--enable=interfacer \
	--enable=unconvert \
	--enable=goconst \
	--enable=goimports \
	--enable=lll --line-length=120 \
	./...

	# disabled for now as "_ = someErrorer()" gives "warning: Errors
	# unhandled.,LOW,HIGH (gas)", which is annoying and can't be silenced as far
	# as I can find.
	#--enable=gas \
